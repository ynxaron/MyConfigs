(()=>{"use strict";var e,t,o={207356:(e,t,o)=>{o(821057),o(122556),o(582845),o(250570),o(533019),o(721473),o(788208),o(22624),o(241792),o(267602),o(653476),o(228244),o(670560),o(840088);o(203645);Object.keys,Object.entries;Object.assign;Symbol("deprecated api name"),Symbol("abstracted api name"),Symbol("info message"),Symbol("warning message");new class{setTimeout(e,t){for(var o=arguments.length,r=new Array(o>2?o-2:0),i=2;i<o;i++)r[i-2]=arguments[i];setTimeout(e,t,...r)}};o(725847),o(749411),o(731107);Object.fromEntries;Error;function r(e){return"Error"===e.type||"ErrorBefore"===e.type||"PreconditionFailed"===e.type||"OutOfSpace"===e.type||"SharedWorkerFailedToDelegate"===e.type}const i="notion-db-v4.sqlite3",n=new Set(["notion-db.sqlite3","notion-db-v0.sqlite3","notion-db-v1.sqlite3","notion-db-v2.sqlite3","notion-db-v3.sqlite3"]),s=console.warn;let a;console.warn=function(){"sqlite3_step() rc="!==(arguments.length<=0?void 0:arguments[0])&&s(...arguments)};const l={initialize:async function(){a=await c.createInstance()},execSqliteBatch:function(e){if(!a)throw new Error("Sqlite DB was not initialized");return a.execSqliteBatch(e)},execSqliteBatchV2:function(e){if(!a)throw new Error("Sqlite DB was not initialized");return a.execSqliteBatchV2(e)},resetDb_DEBUG_ONLY:async function(){if(!a)throw new Error("Sqlite DB was not initialized");await a.closeDbAndWipeAllData(),a=await c.createInstance()}};o(254375).Jj(l);class c{constructor(e){if(this.db=void 0,this.sqlite3=void 0,this.PoolUtil=void 0,!("OpfsSAHPoolDb"in e.PoolUtil))throw e.PoolUtil;this.sqlite3=e.sqlite3,this.PoolUtil=e.PoolUtil,this.db=new e.PoolUtil.OpfsSAHPoolDb(`/${i}`)}static async createInstance(){const e=await async function(e){return(await Promise.resolve().then(o.bind(o,910081))).default(e)}(),t=await e.installOpfsSAHPoolVfs({}),r=new c({sqlite3:e,PoolUtil:t});return r.deleteDeprecatedFiles(t),r}execSqliteBatch(e){return Promise.resolve(this.execSqliteBatchInternal(e))}execSqliteBatchV2(e){const{precondition:t,batch:o}=e;if(t){const e=this.execSqliteBatchInternal({body:[t],onError:void 0}),[r]=e.body;if("DataOk"===r.type){const{precondition_result:e}=function(e){if(1!==e.data.length)throw new Error(`Expected exactly 1 result row, instead had ${e.data.length}.`);return e.data[0]}(r);if("number"!=typeof e)throw new Error(`precondition_result must be 0/1, instead received: ${e} (type: ${typeof e})`);if(1===e)return Promise.resolve(this.execSqliteBatchInternal(o))}const i=o.body.map((()=>({type:"PreconditionFailed"})));return Promise.resolve({body:i,onErrorResult:void 0})}return Promise.resolve(this.execSqliteBatchInternal(o))}async closeDbAndWipeAllData(){this.db.close(),await this.PoolUtil.removeVfs()}execSqliteBatchInternal(e){const{body:t,onError:o}=e,i=[];let n=!1;const s=Date.now();for(const[a,l]of t.entries()){if(n){i[a]={type:"ErrorBefore"};continue}const e=this.execSqliteStatement(l);i[a]=e,n=r(e)}return{body:i,onErrorResult:n&&o?this.execSqliteStatement(o):void 0,batchExecutionTimeMs:Date.now()-s}}execSqliteStatement(e){try{const{sql:t,args:o,getData:r}=e;if(r){return{type:"DataOk",data:this.db.exec({sql:t,bind:o,rowMode:"object",returnValue:"resultRows"})}}return this.db.exec({sql:t,bind:o}),{type:"Ok"}}catch(t){return t instanceof this.sqlite3.SQLite3Error?{type:"Error",message:t.message,name:t.name,sqliteCode:t.resultCode}:t instanceof Error?{type:"Error",message:t.message,name:t.name,sqliteCode:void 0}:{type:"Error",message:"Unknown error",name:"SqliteUnknownError",sqliteCode:void 0}}}async deleteDeprecatedFiles(e){for(const o of n)e.unlink(`/${o}`);const t=await navigator.storage.getDirectory();if(!("keys"in t)||"function"!=typeof t.keys)throw new Error("Failed to retrieve existing OPFS files.");for await(const o of t.keys())"string"!=typeof o||i!==o&&!n.has(o)||await t.removeEntry(o)}}}},r={};function i(e){var t=r[e];if(void 0!==t)return t.exports;var n=r[e]={id:e,loaded:!1,exports:{}};return o[e].call(n.exports,n,n.exports,i),n.loaded=!0,n.exports}i.m=o,i.x=()=>{var e=i.O(void 0,[33534,2894,22354],(()=>i(207356)));return e=i.O(e)},e=[],i.O=(t,o,r,n)=>{if(!o){var s=1/0;for(d=0;d<e.length;d++){for(var[o,r,n]=e[d],a=!0,l=0;l<o.length;l++)(!1&n||s>=n)&&Object.keys(i.O).every((e=>i.O[e](o[l])))?o.splice(l--,1):(a=!1,n<s&&(s=n));if(a){e.splice(d--,1);var c=r();void 0!==c&&(t=c)}}return t}n=n||0;for(var d=e.length;d>0&&e[d-1][2]>n;d--)e[d]=e[d-1];e[d]=[o,r,n]},i.d=(e,t)=>{for(var o in t)i.o(t,o)&&!i.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},i.f={},i.e=e=>Promise.all(Object.keys(i.f).reduce(((t,o)=>(i.f[o](e,t),t)),[])),i.u=e=>33534===e?e+"-4789ee55e1deb37c.js":2894===e?"2894-c3d859da8ab86358.js":e+"-"+{22354:"b1df31cd559c7b26",82389:"e1846c9b5c3536ab"}[e]+".js",i.miniCssF=e=>{},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),i.p="/_assets/",(()=>{i.b=self.location+"";var e={27244:1};i.f.i=(t,o)=>{e[t]||importScripts(i.p+i.u(t))};var t=globalThis.webpackChunknotion_next=globalThis.webpackChunknotion_next||[],o=t.push.bind(t);t.push=t=>{var[r,n,s]=t;for(var a in n)i.o(n,a)&&(i.m[a]=n[a]);for(s&&s(i);r.length;)e[r.pop()]=1;o(t)}})(),t=i.x,i.x=()=>Promise.all([33534,2894,22354].map(i.e,i)).then(t);i.x()})();